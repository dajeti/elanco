import { SignIn, SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import { User } from "@clerk/nextjs/dist/types/server";
import { NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { nullable } from "zod";
import { RouterOutputs, api } from "~/utils/api";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import Image from "next/image";
import { LoadingPage, LoadingSpinner } from "~/components/loading";

dayjs.extend(relativeTime);

const CreatePostWizard = () => {
  const { user } = useUser();

  if (!user) return null;

  return (<div className="flex w-full gap-4 p-4">
    <img
      src={user.profileImageUrl}
      alt="Profile Image"
      className="h-14 w-14 rounded-full"
    />

  <input placeholder="Type some emojis!" className="grow bg-transparent" />
  </div>
  );
};

type PostWithUser = RouterOutputs["posts"]["getAll"][number];

const PostView = (props: PostWithUser) => {
  const { post, author } = props;
  return (

    <div key={post.id} className="border-b border-slate-400 p-8 flex ">
      <img  
      src={author.profileImageUrl} 
      alt={`@${author.username}'s profile`}
      className="h-14 w-14 rounded-full"
      />
      <div className="felx flex-col">
      <div className="flex gap-1">
       <span>@{author.username}</span>
       <span>{`- ${dayjs(post.createdAt).fromNow()}`}</span>
      </div>
      <span>{post.content}</span>
      </div>
    </div>

  )

}

export default function Home() {

  const user = useUser();
  const { data, isLoading } = api.posts.getAll.useQuery();

  if (isLoading) return <LoadingPage/>

  if (!data) return <div>Something went wrong</div>

  return (
    <>
      <Head>
        <title>Witter</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/social.png" />
      </Head>
      <main className="flex justify-center h-screen">
        <div className="w-full h-full md:max-w-2xl border-x border-slate-400">

          <div className="border-slate-400 p-4">
            {!user.isSignedIn && <SignInButton />}
            {user.isSignedIn && <CreatePostWizard />}
          </div>

          <div className="flex flex-col">
            {[...data].map((fullPost) => (
              <PostView {...fullPost} key={fullPost.post.id} />
            ))}

          </div>
        </div>
      </main>
    </>
  );
}
